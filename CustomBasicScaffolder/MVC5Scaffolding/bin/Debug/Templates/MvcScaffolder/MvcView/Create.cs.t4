<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model <#= ViewDataTypeName #>
<#
// "form-control" attribute is only supported for all EditorFor() in System.Web.Mvc 5.1.0.0 or later versions, except for checkbox, which uses a div in Bootstrap
string boolType = "System.Boolean";
Version requiredMvcVersion = new Version("5.1.0.0");
bool isControlHtmlAttributesSupported = MvcVersion >= requiredMvcVersion;
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ProgramTitle #>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}



<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ProgramTitle #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<#
if (ReferenceScriptLibraries) {
#>
<#
    if (!IsLayoutPageSelected && IsBundleConfigPresent) {
#>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")

<#
    }
#>
<#
    else if (!IsLayoutPageSelected) {
#>
<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

<#
    }
#>

<#
}
#>
<#
    var modelName =  ModelMetadata.EntitySetName;
	var primaryKey = ModelMetadata.PrimaryKeys[0].PropertyName;
#>
<div class="container-fluid">
    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">
                <#= ProgramTitle #>
                <small><#= ViewName #></small>
            </h1>
            <ol class="breadcrumb">
                <li>
                    <i class="fa fa-home"></i>  @Html.ActionLink("Home", "Index", "Home")
                </li>
                 <li>
                    <i class="fa fa-folder-open"></i>  @Html.ActionLink("<#= modelName #>", "Index", "<#= modelName #>")
                </li>
                <li class="active">
                    <i class="fa fa-file"></i> <#= ViewName #>
                </li>
            </ol>
        </div>
    </div>
    <!-- /.row -->
     <div class="row">
        <div class="col-lg-12">

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <#
	    string divclass="";
		if(FromLayoutCols>3){
			divclass="";
        }else{
			divclass = "form-horizontal";
        }
	#>
    <div class="<#= divclass #>">
        <h4><#= ProgramTitle #></h4>
        <hr />
<# 
    if (isControlHtmlAttributesSupported) {
#>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<#        
    } else {
#>
        @Html.ValidationSummary(true)
<#      
    }
#>
        @Html.Partial("<#= ViewPrefix #>EditForm")
        <div class="form-group">
				<p></p>
             <div class="text-center">
                <input type="submit" value=" 保存 " class="btn btn-primary" />
            </div>
        </div>
    </div>
}
    </div>
 </div>
</div>
<#
if(IsLayoutPageSelected && ReferenceScriptLibraries && IsBundleConfigPresent) {
#>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
     <script type="text/javascript">
     
    <#  if(GenerateMasterDetailRelationship  && OneToManyModelMetadata.Count >0) { 
		var primaryKeyVar = ModelTypeName.ToLower() + primaryKey.ToLower();
	#>
		var <#= primaryKeyVar #> = 0;
		var ObjectState = "Added";  
            <# foreach(var item in OneToManyModelMetadata) {
                var boostraptablevar = "$" + item.Key.ToLower()  + "table";
                var detailnamevar=item.Key.ToLower();
            #>                     
             var <#= boostraptablevar #> = {};
            <# } #>
            $(document).ready(function () {

                $('form').submit(function () {
					if (!$('form').valid())
						return false;
                    var token = $('[name=__RequestVerificationToken]').val();
                    var serializedForm = $(this).serialize();
                    var actionurl = $(this).attr('action');
                    <# foreach(var item in OneToManyModelMetadata) {
                        var boostraptablevar = "$" + item.Key.ToLower()  + "table";
                        var detailnamevar=item.Key.ToLower();
                     #>                     
                        var <#= detailnamevar #> = <#= boostraptablevar #>.bootstrapTable('getData');
                     <# } #>
                    
                     var newitem = {
                        <# foreach(var property  in  ModelMetadata.Properties.Where(n=>true ).OrderByDescending(n=>n.Scaffold).ThenBy(n=>n.IsForeignKey).ThenBy(n=>n.PropertyName)) {
                            if(property.IsPrimaryKey) { #>
								//primaryKey
								<#= property.PropertyName #>: <#= primaryKeyVar #>,
                        <# } else if (property.AssociationDirection == AssociationDirection.OneToMany) { #>
								//detailTables
                                <#= property.PropertyName #>: <#= property.PropertyName.ToLower() #> ,
                        <# } else if(property.IsForeignKey)  { #>
								<#= property.PropertyName #>: $('#<#= property.PropertyName #> :selected','form').val(),
						<# } else if (property.AssociationDirection != AssociationDirection.ManyToOne) { #>
                                <#= property.PropertyName #>: $('#<#= property.PropertyName #>', 'form').val(),
                        <#
                             }
                          }
                        #>
                        ObjectState:ObjectState 
                    };
                    $.ajax({
                        url: actionurl,
                        type: "POST",
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        data: JSON.stringify(newitem),
                        success: function (result) {
                            if (result.success) {
                                self.location = "/<#= ControllerRootName #>/Index";
                            } else {
                                alert(result.err);
                            }
                            
                        },
                        error: function (result) {
                            console.log(result.statusText + result.responseText);
                            alert(result.statusText + result.responseText);
                        }
                    });
                    return false;
                    

                });
            });
  <#   } #>
        </script>


}
<#
}
#>
<#
else if(IsLayoutPageSelected && ReferenceScriptLibraries) {
#>

<script src="~/Scripts/jquery-<#= JQueryVersion #>.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<#
}
#>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>